{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlfor","Textform","useState","text","setText","style","color","themes","document","body","placeholder","value","onChange","event","target","for","txt","newText","toUpperCase","showAlert","toLowerCase","getElementById","navigator","clipboard","writeText","split","filter","element","length","Alert","height","alert","word","lower","charAt","slice","capital","msg","defaultProps","abouttext","App","setMode","setAlert","messege","setTimeout","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5cea8b24.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light' ? 'dark': 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    abouttext: PropTypes.string\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    abouttext: 'set About section here'\r\n}","import React, {useState} from 'react'\r\n// import PropTypes from 'prop-types';\r\n// import { findRenderedComponentWithType } from 'react-dom/test-utils';\r\nexport default function Textform(props) {\r\n   \r\n  \r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    if (text === (\"\")) {\r\n      props.showAlert(\"Enter Something\", \"danger\");\r\n    }\r\n    else {\r\n      props.showAlert(\"Converted to upper case\", \"success\");\r\n    }\r\n  }\r\n  const handleDownClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    if (text === (\"\")) {\r\n      props.showAlert(\"Enter Something\", \"danger\");\r\n    }\r\n    else {\r\n      props.showAlert(\"Converted to Lower case\", \"success\");\r\n    }\r\n  }\r\n  const textClear = () => {\r\n    //let newText = text.toLowerCase();\r\n    setText(\"\");\r\n    if (text === (\"\")) {\r\n      props.showAlert(\"Text already clear\", \"danger\");\r\n    }\r\n    else {\r\n      props.showAlert(\"Text Cleared\", \"success\");\r\n    }\r\n\r\n  }\r\n  const handleCopy = () => {\r\n    var txt = document.getElementById('floatingTextarea2');\r\n    //txt.ariaSelected();\r\n    //txt.select();\r\n    navigator.clipboard.writeText(txt.value);\r\n    if (text === (\"\")) {\r\n      props.showAlert(\"Nothing to copy\", \"danger\");\r\n    }\r\n    else {\r\n      props.showAlert(\"Whole text Copied\", \"success\");\r\n    }\r\n\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const themes = () => {\r\n    if (props.mode === 'dark') {\r\n      document.body.style.color = 'white';\r\n    }\r\n    else if (props.mode === '#fcde67') {\r\n      document.body.style.color = 'black';\r\n      <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\"></label>\r\n    }\r\n    else {\r\n      document.body.style.color = 'black';\r\n    }\r\n}\r\n//  style={{ color: props.mode === 'dark' ? 'white' : 'black' }}\r\n  \r\n  // style={{ color: props.mode === 'dark' ? 'white' : 'black' }}\r\n\r\n  // style={{color: props.mode==='dark' ? 'white': 'black'}}\r\n\r\n  const [text, setText] = useState('');\r\n    return (\r\n      <>\r\n       \r\n        <div className=\"form-floating\" style={{color: props.mode==='dark' ? 'white': 'black'}}>\r\n        <h1 className=\"heading\" themes={themes()} >Text Analyzer</h1>\r\n          <textarea className=\"form-control blankarea\" placeholder=\"Leave a comment here\" value={text} onChange={handleOnChange} style={{color: props.mode==='dark'?'light':'dark'}}id=\"floatingTextarea2\"></textarea>\r\n  <label for=\"floatingTextarea2\">{props.txt}</label>\r\n        </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Upper Case</button>\r\n        <button className=\"btn btn-primary bton2\" onClick={handleDownClick}>Convert To Lower Case</button>\r\n        <button className=\"btn btn-primary bton2\" onClick={textClear}>Clear Text</button>\r\n        <button className=\"btn btn-primary bton2\" onClick={handleCopy}>Copy Text</button>\r\n        \r\n        <div className=\"container my-5\">\r\n          <h3 className=\"heading2\">Text Information </h3>\r\n          <p>{text.split(\" \").filter((element) => { return element.length !== 0 }).length} Words, {text.length} Characters</p>\r\n          <p>About {0.008 * text.split(\" \").filter((element)=> {return element.length !== 0}).length} minutes to read </p>\r\n\r\n          <h2 className=\"heading3\">Preview</h2>\r\n          <p className=\"previewPara\">{text.length>0?text:\"Enter text above to Preview\"}</p>\r\n        </div>\r\n\r\n\r\n            </>\r\n    )\r\n}\r\n\r\nTextform.defaultProps = {\r\n  txt: \"Write Something\"\r\n}\r\n\r\n","import React from \"react\"\r\n\r\nexport default function Alert(props) {\r\n    const capital = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong> {capital(props.alert.type)}</strong>:{props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (messege, type) => {\n    setAlert({    //here setAlert is an object\n      msg: messege,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1900);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(36 47 58)';\n      document.body.style.color = 'dark';\n      showAlert(\"Dark mode Enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'light';\n      showAlert(\"Light mode Enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" abouttext=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n       {/* <Switch>\n          <Route exact path=\"/home\">\n              {/* <About mode={mode}/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */} \n          <Textform mode={mode} showAlert={showAlert} />\n\n          {/* </Route>\n        </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}